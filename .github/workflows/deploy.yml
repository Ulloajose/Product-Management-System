name: Deploy to Cloud

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Ensure Docker is running
        run: |
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
          sudo chmod 666 /var/run/docker.sock

      - name: Build Docker image
        run: docker build -t papakote/product-management-system:latest .

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push papakote/product-management-system:latest

      - name: Deploy to server
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USERNAME: ${{ secrets.SERVER_USERNAME }}
          PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.SERVER_PRIVATE_KEY_PASSWORD }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          sshpass -p "$PRIVATE_KEY_PASSWORD" scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml $USERNAME@$HOST:/opt/product-management-system
          sshpass -p "$PRIVATE_KEY_PASSWORD" scp -o StrictHostKeyChecking=no -i private_key.pem * $USERNAME@$HOST:/opt/product-management-system*
          sshpass -p "$PRIVATE_KEY_PASSWORD" ssh -o StrictHostKeyChecking=no -i private_key.pem $USERNAME@$HOST 'cd /opt/product-management-system && docker-compose pull && docker-compose up -d'
